services:
  frontend:
    container_name: frontend
    image: nkl322/django-pet-frontend:latest
    build:
      context: ./frontend
      target: dev
    command: yarn ng serve --host 0.0.0.0 --poll=2000
    ports:
      - "4200:4200"
    env_file:
      - dev.env
    environment:
      SENTRY_DSN: ${SENTRY_DSN_FRONTEND:-}
      COMMIT_SHA: ${COMMIT_SHA:-}
    volumes:
      - "./frontend/src:/home/nkl/frontend/src"

  backend:
    container_name: backend
    image: nkl322/django-pet-backend:latest
    build:
      context: ./backend
      target: dev
    command: sh -c "poetry run python manage.py migrate &&
                    poetry run python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - dev.env
    volumes:
      - "./backend/core:/home/nkl/backend/core"
      - "./backend/api:/home/nkl/backend/api"
    depends_on:
      - postgres

  celery_worker:
    container_name: celery_worker
    image: nkl322/django-pet-backend:latest
    build:
      context: ./backend
      target: dev
    command: poetry run celery -A core worker --loglevel=info
    env_file:
      - dev.env
    volumes:
      - "./backend/core:/home/nkl/backend/core"
      - "./backend/api:/home/nkl/backend/api"
    depends_on:
      - redis

  celery_beat:
    container_name: celery_beat
    image: nkl322/django-pet-backend:latest
    build:
      context: ./backend
      target: dev
    command: poetry run celery -A core beat --loglevel=info
    env_file:
      - dev.env
    volumes:
      - "./backend/core:/home/nkl/backend/core"
      - "./backend/api:/home/nkl/backend/api"
    depends_on:
      - redis

  redis:
    container_name: redis
    image: redis:alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    volumes:
      - "./redis.conf:/usr/local/etc/redis/redis.conf"
      - "redis_data_dev:/data"

  postgres:
    container_name: postgres
    image: postgres:alpine
    env_file:
      - dev.env
    volumes:
      - db_data_dev:/var/lib/postgresql/data

volumes:
  db_data_dev:
  redis_data_dev:
